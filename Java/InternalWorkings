Internal Working of HashMap

When we initialize hashmap a sort of list of certain size is created, now once we place key value using put
a sort of hashcode is generated for it and based on that we get an index, based on that index we store a sort of linked list
having hashcode, key, value and next referring to next linked list.

Now what could happen is that we get the same hashcode as already present and then the same index is slotted, in that
case we check whether key is same, if key is same we update the new value else we store the new linked list
in the form of again hashcode, key value and next but the previous list next now points to this.

In Hashset, when we initialize hashset then internally a hashmap is initialized and when we add in hashset then key is the
element we are storing and value is some constant.
