1. WHAT IS SPRINGBOOT

SPRINGBOOT IS A MODULE OF SPRING WHICH PROVIDES RAD(RAPID APPLICATION DEVELOPMENT) TO THE SPRING FRAMEWORK, IT IS USED
TO CREATE STANDALONE SPRING BASED APPLICATION, THAT YOU CAN JUST RUN AS IT NEEDS VERY LITTLE CONFIGURATION

ADVANTAGES

EMBED TOMCAT AND MANY OTHER JARS, IS PROVIDED WITH STARTER POM FOR HELPING IN MAVEN CONFIGURATION, AUTOMATICALLY CONFIGURES
SPRING WHEREVER POSSIBLE

FEATURES OF SPRINGBOOT
WEBDEVELOPMENT
SPRINGAPPLICATION
APPLICATION EVENTS AND LISTENERS
ADMIN FEATURES


THE @RESTCONTROLLER IS A STEREOTYPE ANNOTATION. IT ADDS @CONTROLLER AND @RESPONSEBODY ANNOTATIONS TO THE CLASS.
WE NEED TO IMPORT ORG.SPRINGFRAMEWORK.WEB.BIND.ANNOTATION PACKAGE IN OUR FILE, IN ORDER TO IMPLEMENT IT.

SPRING BOOT PROVIDES VARIOUS PROPERTIES WHICH CAN BE SPECIFIED INSIDE OUR PROJECT'S APPLICATION.PROPERTIES FILE.
THESE PROPERTIES HAVE DEFAULT VALUES AND YOU CAN SET THAT INSIDE THE PROPERTIES FILE. PROPERTIES ARE USED TO SET
VALUES LIKE: SERVER-PORT NUMBER, DATABASE CONNECTION CONFIGURATION ETC.

SPRINGBOOT PROVIDES BUILT IN STARTER WHICH MAKES DEVELOPMENT EASIER AND RAPID, FOR EG IF WE HAVE TO GET STARTED
USING SPRING AND JPA, JUST INCLUDE SPRING-BOOT-STARTER-DATA-JPA

SPRINGBOOT PROVIDES ACTUATOR TO MANAGE OUR APPLICATIONS. ACTUATOR IS A TOOL WHICH HAS HTTP ENDPOINTS, WHEN APPLICATION
IS PUSHED TO PRODUCTION WE CAN CHECK MONITOR OUR APPLICATION USING THESE HTTP ENDPOINTS

2. THYMELEAF = IT IS A SERVER SIDE JAVA TEMPLATE ENGINE FOR WEB APPLICATION. IT'S MAIN GOAL IS TO BRING ELEGANT NATURAL
 TEMPLATES TO YOUR WEB APPLICATION.
 IT CAN BE INTEGRATE WITH SPRING FRAMEWORK AND IDEAL FOR HTML5 JAVA WEB APPLICATIONS.

3. THE @SPRINGBOOTAPPLICATION ANNOTATION IS EQUIVALENT TO USING @CONFIGURATION, @ENABLEAUTOCONFIGURATION,
 AND @COMPONENTSCAN WITH THEIR DEFAULT ATTRIBUTES. SPRING BOOT ENABLES THE DEVELOPER TO USE A SINGLE ANNOTATION
 INSTEAD OF USING MULTIPLE. BUT, AS WE KNOW, SPRING PROVIDED LOOSELY COUPLED FEATURES THAT WE CAN USE FOR EACH
 ANNOTATION AS PER OUR PROJECT NEEDS

 @BEAN: IT IS A METHOD-LEVEL ANNOTATION. IT IS AN ALTERNATIVE OF XML <BEAN> TAG. IT TELLS THE METHOD TO PRODUCE A
 BEAN TO BE MANAGED BY SPRING CONTAINER.

 @COMPONENT: IT IS A CLASS-LEVEL ANNOTATION. IT IS USED TO MARK A JAVA CLASS AS A BEAN.

 @CONTROLLER: THE @CONTROLLER IS A CLASS-LEVEL ANNOTATION. IT IS A SPECIALIZATION OF @COMPONENT. IT MARKS A CLASS AS A
 WEB REQUEST HANDLER. IT IS OFTEN USED TO SERVE WEB PAGES. BY DEFAULT, IT RETURNS A STRING THAT INDICATES WHICH ROUTE
 TO REDIRECT. IT IS MOSTLY USED WITH @REQUESTMAPPING ANNOTATION.

 @REQUESTMAPPING: IT IS USED TO MAP THE WEB REQUESTS. IT HAS MANY OPTIONAL ELEMENTS LIKE CONSUMES, HEADER, METHOD, NAME,
  PARAMS, PATH, PRODUCES, AND VALUE. WE USE IT WITH THE CLASS AS WELL AS THE METHOD.

 @REPOSITORY: IT IS A CLASS-LEVEL ANNOTATION. THE REPOSITORY IS A DAOS (DATA ACCESS OBJECT) THAT ACCESS THE DATABASE DIRECTLY.
 THE REPOSITORY DOES ALL THE OPERATIONS RELATED TO THE DATABASE.

 @ENABLEAUTOCONFIGURATION – TO MAKE SPRING BOOT LOOK FOR AUTO-CONFIGURATION BEANS ON ITS CLASSPATH AND AUTOMATICALLY
 APPLY THEM.
 @SPRINGBOOTAPPLICATION – USED TO DENOTE THE MAIN CLASS OF A BOOT APPLICATION. THIS ANNOTATION COMBINES @CONFIGURATION,
 @ENABLEAUTOCONFIGURATION, AND @COMPONENTSCAN ANNOTATIONS WITH THEIR DEFAULT ATTRIBUTES.
 @SERVICE: IT IS ALSO USED AT CLASS LEVEL. IT TELLS THE SPRING THAT CLASS CONTAINS THE BUSINESS LOGIC.

 APPLICATIONCONTEXT IS AN INTERFACE FOR PROVIDING CONFIGURATION INFORMATION TO AN APPLICATION. THERE ARE MULTIPLE CLASSES
 PROVIDED BY SPRINGFRAMEWORK THAT IMPLEMENTS THIS INTERFACE AND HELPS US USE CONFIGURATION INFORMATION IN APPLICATIONS.
 APPLICATIONCONTEXT PROVIDES STANDARD BEAN FACTORY LIFECYCLE CAPABILITIES.

 THE @ENABLEAUTOCONFIGURATION ANNOTATION ENABLES SPRING BOOT TO AUTO-CONFIGURE THE APPLICATION CONTEXT. THEREFORE, IT
 AUTOMATICALLY CREATES AND REGISTERS BEANS BASED ON BOTH THE INCLUDED JAR FILES IN THE CLASSPATH AND THE BEANS
 DEFINED BY US.
 SPRING @CONFIGURATION ANNOTATION IS PART OF THE SPRING CORE FRAMEWORK. SPRING CONFIGURATION ANNOTATION INDICATES
 THAT THE CLASS HAS @BEAN DEFINITION METHODS.
 WHILE DEVELOPING AN APPLICATION, WE NEED TO TELL THE SPRING FRAMEWORK TO LOOK FOR SPRING-MANAGED COMPONENTS.
 @COMPONENTSCAN ENABLES SPRING TO SCAN FOR THINGS LIKE CONFIGURATIONS, CONTROLLERS, SERVICES, AND OTHER COMPONENTS WE DEFINE.

 @CONTROLLER MAP OF THE MODEL OBJECT TO VIEW OR TEMPLATE AND MAKE IT HUMAN READABLE BUT @RESTCONTROLLER SIMPLY
 RETURNS THE OBJECT AND OBJECT DATA IS DIRECTLY WRITTEN IN HTTP RESPONSE AS JSON OR XML.

 Dependency Injection
 Instead of creating a new object, spring instantiates this object
 AUTOWIRING FEATURE OF SPRING FRAMEWORK ENABLES YOU TO INJECT THE OBJECT DEPENDENCY IMPLICITLY.

 Bean
 Simply instance of class managed by spring container.

 Spring container
 The Spring container is at the core of the Spring Framework. The container will create the objects/beans, wire them together,
 configure them, and manage their complete life cycle from creation till destruction. The Spring container uses DI(dependency
 injection) to manage the components that make up an application.

 What is curl command?
 Client URL (cURL, pronounced “curl”) is a command line tool that enables data exchange between a device and a server
 through a terminal. Using this command line interface (CLI), a user specifies a server URL (the location where they
 want to send a request) and the data they want to send to that server URL.

 SpringApplication.run simply returns the object of application context